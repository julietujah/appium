name: Appium Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK Command-line Tools
        run: |
          # Set SDK paths
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH
          
          # Persist environment variables for all steps
          echo "export ANDROID_HOME=$ANDROID_HOME" >> ~/.bashrc
          echo "export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> ~/.bashrc
          echo "export PATH=$PATH" >> ~/.bashrc
          
          # Download and install Android SDK tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip -P /tmp
          unzip -o /tmp/commandlinetools-linux-12266719_latest.zip -d $ANDROID_HOME
          
          # Install required Android packages
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "emulator" "system-images;android-30;default;x86_64"
          
          # Accept licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          
          # Verify tools installation
          which adb || echo "adb not found"
          which avdmanager || echo "avdmanager not found"
          which emulator || echo "emulator not found"

      - name: Install System Image and Create Emulator
        run: |
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH
          
          # Ensure system image is installed
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-30;default;x86_64"
          
          # Create AVD with explicit ABI
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_emulator -k "system-images;android-30;default;x86_64" --device "pixel" --abi x86_64 --force
          
          # Verify AVD creation
          $ANDROID_HOME/emulator/emulator -list-avds || echo "No AVDs found!"

      - name: Start Emulator
        run: |
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH
          
          # Start the emulator in headless mode
          nohup $ANDROID_HOME/emulator/emulator -avd test_emulator -no-audio -no-window -gpu off &

          # Wait for emulator to boot
          echo "Waiting for emulator to boot..."
          sleep 60
          
          adb devices
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          echo "Emulator is ready!"

      - name: Start Appium Server
        run: appium --log-level error &

      - name: Run Appium Tests
        run: ./gradlew test

      - name: Stop Appium Server & Emulator
        run: |
          pkill -f appium
          adb emu kill
