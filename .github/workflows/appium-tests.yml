name: Appium Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK and Tools
        run: |
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export ANDROID_AVD_HOME=$HOME/.android/avd
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH

          echo "Setting environment variables..."
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_AVD_HOME=$ANDROID_AVD_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV

          mkdir -p "$ANDROID_AVD_HOME"

          echo "Downloading Android command-line tools..."
          wget https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip -P /tmp
          unzip -o /tmp/commandlinetools-linux-12266719_latest.zip -d $ANDROID_HOME

          echo "Installing required Android SDK packages..."
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "emulator" "system-images;android-30;default;x86_64"

          echo "Accepting licenses..."
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

          echo "Verifying installed tools..."
          which adb || echo "adb not found!"
          which avdmanager || echo "avdmanager not found!"
          which emulator || echo "emulator not found!"

      - name: Create Emulator AVD
        run: |
          source $GITHUB_ENV

          echo "Checking if AVD directory exists..."
          mkdir -p "$ANDROID_AVD_HOME"
          chmod -R 777 "$ANDROID_AVD_HOME"  # Ensure correct permissions
          ls -l "$ANDROID_AVD_HOME" || echo "AVD directory is missing!"

          echo "Checking existing AVDs..."
          $ANDROID_HOME/emulator/emulator -list-avds || echo "No AVDs found yet."

          echo "Deleting any existing AVD named test_emulator..."
          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager delete avd -n test_emulator || echo "No existing AVD to delete"

          echo "Creating AVD: test_emulator"
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_emulator \
            -k "system-images;android-30;default;x86_64" --device "pixel" --force

          echo "Confirming AVD creation..."
          ls -l "$ANDROID_AVD_HOME"
          $ANDROID_HOME/emulator/emulator -list-avds

      - name: Start Emulator
        run: |
          source $GITHUB_ENV

          echo "Checking available AVDs before starting..."
          $ANDROID_HOME/emulator/emulator -list-avds

          if ! $ANDROID_HOME/emulator/emulator -list-avds | grep -q "test_emulator"; then
            echo "ERROR: test_emulator not found!"
            exit 1
          fi

          nohup $ANDROID_HOME/emulator/emulator -avd test_emulator \
            -no-audio -no-window -gpu swiftshader_indirect \
            -no-boot-anim -no-snapshot-save -memory 4096 -cores 2 -accel off &

          echo "Waiting for emulator to boot..."
          boot_complete=false
          for i in {1..60}; do
            boot_status=$(adb shell getprop sys.boot_completed 2>/dev/null)
            if [[ "$boot_status" == "1" ]]; then
              boot_complete=true
              break
            fi
            sleep 2
          done

          if [[ "$boot_complete" == "true" ]]; then
            echo "Emulator is ready!"
            adb devices
          else
            echo "Emulator failed to start in time."
            exit 1
          fi


      - name: Start Appium Server
        run: |
          appium --log-level error &
          sleep 5  # Allow Appium server to fully start

      - name: Run Appium Tests
        run: ./gradlew test

      - name: Stop Appium Server & Emulator
        run: |
          pkill -f appium
          adb emu kill
