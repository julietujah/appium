name: Appium Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK Command-line Tools
        run: |
          # Download and unzip the latest command-line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-12266719_latest.zip -P /tmp
          unzip -o /tmp/commandlinetools-linux-12266719_latest.zip -d /usr/local/lib/android/sdk
          # Install platform-tools, emulator, and system-images
          /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "emulator" "system-images;android-30;default;x86_64"
          # Accept licenses
          yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Set Environment Variables
        run: |
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH
          echo "ANDROID_HOME is set to $ANDROID_HOME"
          echo "PATH is set to $PATH"
          # Check if adb, avdmanager, emulator are available in the path
          which adb || echo "adb not found"
          which avdmanager || echo "avdmanager not found"
          which emulator || echo "emulator not found"

      - name: Install System Image and Create Emulator AVD
        run: |
          # Install system image if not installed
          /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-30;default;x86_64"
          # Create the AVD with verbose output for debugging
          echo "no" | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/avdmanager create avd -n test_emulator -k "system-images;android-30;default;x86_64" --device "pixel" --force -v
          # Check the created AVD
          /usr/local/lib/android/sdk/emulator/emulator -list-avds || echo "No AVDs found!"

      - name: Verify AVD Location
        run: |
          # Check if the AVD file is present in the specified directory
          echo "Checking AVD directory..."
          ls /usr/local/lib/android/sdk/avd || echo "AVD directory not found"
          ls /usr/local/lib/android/sdk/avd/test_emulator.avd || echo "AVD file not found"
          ls $HOME/.android/avd || echo "No AVDs found in home directory"
          ls $ANDROID_HOME/avd || echo "No AVDs found in SDK directory"

      - name: Start Emulator
        run: |
          # Ensure AVD exists and start the emulator
          /usr/local/lib/android/sdk/emulator/emulator -list-avds
          nohup $ANDROID_HOME/emulator/emulator -avd test_emulator -no-audio -no-window -gpu off &
          echo "Waiting for emulator to boot..."
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          echo "Emulator is ready!"

      - name: Start Appium Server
        run: appium --log-level error &

      - name: Run Appium Tests
        run: ./gradlew test

      - name: Stop Appium Server & Emulator
        run: |
          pkill -f appium
          adb emu kill
